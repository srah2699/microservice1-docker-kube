variables:
  DOCKER_REGISTRY: 349058034363.dkr.ecr.eu-west-1.amazonaws.com
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - docker

build-job: # This job runs in the build stage, which runs first.
  image: node:latest
  stage: build
  script:
    - curl --silent --show-error --fail -u$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY $ARTIFACTORY_URL/artifactory/api/npm/auth >> ./.npmrc
    - curl --silent --show-error --fail -u$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY $ARTIFACTORY_URL/artifactory/api/npm/npm-logistics-local/auth/ct-shipping >> ./.npmrc
    - npm install
    - echo "Built successfully "

unit-test-job: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

dockerize-job:
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:19.03.5-dind
  stage: docker
  script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
    - curl --silent --show-error --fail -u$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY $ARTIFACTORY_URL/artifactory/api/npm/auth >> ./.npmrc
    - curl --silent --show-error --fail -u$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY $ARTIFACTORY_URL/artifactory/api/npm/npm-logistics-local/auth/ct-shipping >> ./.npmrc
    - docker build -t $ECR_REPO:hima .
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker push $ECR_REPO:hima
