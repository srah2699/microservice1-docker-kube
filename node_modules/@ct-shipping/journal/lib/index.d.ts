interface MaskingOptions {
    enableMasking?: boolean;
    sensitiveKeys?: RegExp[];
}
declare type LogMessage = any;
declare type ContextString = string;
declare class Logger {
    private contextKey;
    private enableMasking;
    constructor();
    private getTraceID;
    private winstonLogger;
    registerContext(key: ContextString): void;
    registerMasker(maskingOptions: MaskingOptions): void;
    info(message: LogMessage): void;
    error(message: LogMessage): void;
    debug(message: LogMessage): void;
    warn(message: LogMessage): void;
}
declare const journal: Logger;
export default journal;
